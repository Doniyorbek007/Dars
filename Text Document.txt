    Dasturlash tillarida ma'lumot turlarini saqlash:
    
        Barcha dasturlash tiilarida ma'lumot turlarini saqlaydigan idishlar ya'ni savatlar mavjud.

        Ularning ba'zilarining nomlari barcha dasturlash tillarida bir xil bo'ladi. 

        Ayrim dasturlash tillarida mavjud bo'lgan savatchalar boshqa dasturlash tillarida yoq.
    
        Lekin ularning muqobili mavjud.
    
        Qaysi dasturlash tillarida ma'lumot turlarini saqlovchi savatchalar ko'p bo'lsa o'sha dasturlash tili mukammal va kuchli bo'ladi.

    Pythonda 4ta ma'lumot saqlovchi savatchalar mavjud:
        1. "List" 
        2. "Tuple"
        3. "Dictionary"
        4. "Set"
    
    Tuple o'zgatirib bo'lmaydigan list

---------------------------------------------------------------------------------------------

                                Python OOP (Object Oriented Principles/Object Oriented Programming)
    
    Hozigi kundagi eng mashhur dasturlash tillari OOP qoidalari asosida ishlaydi.
    Misol uchun: C++, JAVA, C#, PYTHON, JAVASCRIPT.
    Dunyodagi eng mashhur OOP prinsiplari asosida ishlaydigan eng mashhur dasturlash tillari JAVA va C#

    Nimaga OOP arxitekturasi muhim?
        
    Dasturchi class yaraitshi uchun abstrak (mavhum) narslar haqida o'ylay boshlashi kerak.
     

    Pip (Package install for Python)

    Barcha dasturlash tiilarida qo'shimcha paketlarni o'rnatib beradigan dastur mavjud.
    misol uchun Python (pip) JAVASCRIPT (npm)

    Kompyuterimizdagi
    Paketlar ustida turli xil metodlar bajariladi.
    Ular:
        Paket o'rnatiladi 
        Paket yangilanadi (pip install --upgrade '...')
        Paket o'chiriladi (pip uninstall '...')

    Pip yordamida paketlarni tekshirish uchun "pip list" buyrug'i ishlatiladi.

    Yuqorida aytilgan fikrlar 3-tomon paketlarga tegishli.

    O'rnatilgan Virtual muhitni versiyasini tekshirish (python -m virtualenv --version).

---------------------------------------------------------------------------------------------

    Hozigi kunda barcha dasturlarni 2 qismga ajratsa bo'ladi
        1 - Mijoz (Kliyent) tomon 
        2 - Server tomon 
    Frontend Backend

    API (Application Programming Interfaces)
        API 2 ta tamoyil ustida qurilgan.
        Bular so'rov va javob.

    Biz ishlatayotgan internet protokollar ustiga qurilgan.
    
    Barcha dasturlash tillari API bilan ishlay oladi.

    Bizlar internet bilan ya'ni API bilan muloqot qilish uchun dasturlash tili kerak.

    HTTP (Hyper Text Transport Protocol)

    HTTP metodlari:
        GET ---------- ma'lumotni olib beradi
        POST ---------- ma'lumotni yaratadi
        PUT ---------- mavjud bo'lgan ma'lumotni yangilaydi
        PATCH ---------- mavjud bo'lgan ma'lumotni ayrim bir qismini yangilaydi